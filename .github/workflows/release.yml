name: Release

on:
  release:
    types: [released]

defaults:
  run:
    shell: bash

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: full
  RUSTFLAGS: -D warnings
  RUSTUP_MAX_RETRIES: 10

jobs:
  release:
    name: ${{ matrix.target }}
    strategy:
      matrix:
        include:
          - target: aarch64-unknown-linux-gnu
            upx_args: --best --lzma
            upx_strip: false
          - target: aarch64-unknown-linux-musl
            upx_args: --best --lzma
            upx_strip: false
          - target: x86_64-unknown-linux-gnu
            upx_args: --best --lzma
            upx_strip: true
          - target: x86_64-unknown-linux-musl
            upx_args: --best --lzma
            upx_strip: true
          - target: aarch64-apple-darwin
            os: macos-latest
            upx_args: --best
            upx_strip: false
          - target: x86_64-apple-darwin
            os: macos-latest
            upx_args: --best
            upx_strip: true
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            upx_args: -9
            upx_strip: false
    runs-on: ${{ matrix.os || 'ubuntu-latest' }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3.0.2
      - uses: taiki-e/github-actions/install-rust@main
      - name: Setup rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: ${{ matrix.target }}
      - run: echo "RUSTFLAGS=${RUSTFLAGS} -C target-feature=+crt-static" >> "${GITHUB_ENV}"
        if: endsWith(matrix.target, 'windows-msvc')
      - name: Build target
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }} --locked
      - name: Compress binaries
        uses: svenstaro/upx-action@v2
        with:
          file: target/${{ matrix.target }}/release/dd-metric
          args: ${{ matrix.upx_args }}
          strip: ${{ matrix.upx_strip }}
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: dd-metric
          target: ${{ matrix.target }}
          tar: all
          zip: windows
          include: LICENSE,README.md,CONTRIBUTING.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
